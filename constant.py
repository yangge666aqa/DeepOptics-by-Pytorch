import numpy as np
import torch

wave_length_list_400_700nm = np.array([400, 410, 420, 430, 440, 450, 460, 470, 480, 490, 500, 510, 520, 530, 540,
                                       550, 560, 570, 580, 590, 600, 610, 620, 630, 640, 650, 660, 670, 680, 690,
                                       700]) * 1e-9


SRF_GS3_U3_41S4C_BGR_31_CHANNEL_400_700NM = torch.tensor([
    [18.73589729, 28.27536788, 34.26532218, 38.89578098, 43.92060554, 48.2447291, 49.34113124, 48.42053339, 45.65638999,
     39.93330299, 32.29464007, 23.01558074, 15.2443332, 10.07552324, 7.201548122, 5.080157997, 3.264370381, 2.297836673,
     1.812185775, 1.52638278, 1.125983598, 0.806662059, 0.587345148, 0.537235367, 0.686925654, 1.03072496, 1.226171082,
     1.139780943, 0.623173653, 0.374706952, 0.244239498],
    [6.425137553, 7.446242762, 8.096116496, 8.900800174, 10.36405115, 12.03762611, 14.42202255, 19.65569408,
     25.23192339, 28.83286975, 33.85398281, 42.82070851, 53.13000898, 59.61325583, 61.75104661, 59.59523025,
     53.90891291, 47.30047763, 40.19970471, 32.09065727, 23.35397023, 15.10836029, 9.611802365, 6.887123842,
     5.589670348, 5.345366907, 4.950957308, 4.0502356, 2.583613336, 1.465660475, 0.684460275],
    [7.111793475, 5.795795295, 4.319709787, 3.166535783, 2.451689508, 2.011189415, 1.765684355, 2.010858585,
     2.201868624, 2.451063484, 2.659444915, 3.44220031, 5.054634739, 6.803908502, 6.245753758, 4.315452, 4.102605146,
     5.592691346, 16.81750851, 41.22101035, 54.5222667, 56.03542013, 53.9843276, 50.13648326, 48.50472486, 46.65697227,
     42.49659626, 29.31238995, 14.30632494, 5.929299276, 2.348298176]
])


def refractive_index_glass_ohara_sk1300(wavelength):
    wavelength_square = (wavelength * 1e6) ** 2
    # B1*λ^2 / (λ^2-C1)
    first = (7.44386780E-01 * wavelength_square) / (wavelength_square - 4.95119834E-03)
    # B2*λ^2 / (λ^2-C2)
    second = (3.60198890E-01 * wavelength_square) / (wavelength_square - 1.41130274E-02)
    # B3*λ^2 / (λ^2-C3)
    third = (9.18623119E-01 * wavelength_square) / (wavelength_square - 1.00428510E+02)
    return ((first + second + third) + 1) ** 0.5


MATERIAL_REFRACTIVE_INDEX_FUNCS = {
    "SK1300": refractive_index_glass_ohara_sk1300
}
